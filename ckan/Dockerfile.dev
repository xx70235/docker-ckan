# TODO: switch to 2.10 when it's out
FROM openknowledge/ckan-dev:2.10
RUN set -eux && sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories
MAINTAINER Yunfei Xu <xuyf@nao.cas.cn>

# Set timezone
ARG TZ
RUN cp /usr/share/zoneinfo/$TZ /etc/localtime
RUN echo $TZ > /etc/timezone
ENV PROJ_DIR=/usr
# Install any extensions needed by your CKAN instance
# (Make sure to add the plugins to CKAN__PLUGINS in the .env file)
# For instance:
RUN apk add --repository dl-cdn.alpinelinux.org/alpine/edge/testing geos-dev && \
    apk add proj-dev proj-util jpeg-dev gdal-dev 
RUN pip3 config set global.index-url https://mirrors.aliyun.com/pypi/simple
RUN pip3 install -e git+https://github.com/xx70235/ckanext-spatial.git@v2.0.0#egg=ckanext-spatial && \
    pip3 install -r https://raw.githubusercontent.com/ckan/ckanext-spatial/v2.0.0/requirements.txt
RUN pip3 install -e git+https://github.com/xx70235/ckanext-tif-imageview.git@v1.0.1#egg=ckanext-tif-imageview && \
    pip3 install -r https://raw.githubusercontent.com/xx70235/ckanext-tif-imageview/develop/requirements.txt
RUN pip3 install -e git+https://github.com/xx70235/ckanext-geoview.git@v1.0.0#egg=ckanext-geoview && \
    pip3 install -r https://raw.githubusercontent.com/xx70235/ckanext-geoview/master/pip-requirements.txt
RUN pip3 install -e git+https://github.com/xx70235/ckanext-cloudstorage.git@v1.0.2#egg=ckanext-cloudstorage && \
    pip3 install -r https://raw.githubusercontent.com/xx70235/ckanext-cloudstorage/master/requirements.txt
RUN pip3 install xarray rasterio python-dateutil ckanapi
RUN apk add bsd-compat-headers gcc g++ make curl-dev libpng-dev libxml2-dev hdf5-dev netcdf-dev proj-dev
RUN wget https://code.mpimet.mpg.de/attachments/download/27654/cdo-2.1.1.tar.gz
RUN tar -zxvf cdo-2.1.1.tar.gz 
WORKDIR /srv/app/cdo-2.1.1 
RUN ./configure --with-netcdf=/usr --with-hdf5=/usr
RUN make & make install
RUN pip3 install cdo
#RUN pip install -e git+https://github.com/ckan/ckanext-pages.git#egg=ckanext-pages && \
#    pip install -e git+https://github.com/ckan/ckanext-dcat.git@v0.0.6#egg=ckanext-dcat && \
   

# Clone the extension(s) your are writing for your own project in the `src` folder
# to get them mounted in this image at runtime

# Apply any patches needed to CKAN core or any of the built extensions (not the
# runtime mounted ones)
# See https://github.com/okfn/docker-ckan#applying-patches
COPY patches ${APP_DIR}/patches

RUN for d in $APP_DIR/patches/*; do \
        if [ -d $d ]; then \
            for f in `ls $d/*.patch | sort -g`; do \
                cd $SRC_DIR/`basename "$d"` && echo "$0: Applying patch $f to $SRC_DIR/`basename $d`"; patch -p1 < "$f" ; \
            done ; \
        fi ; \
    done
